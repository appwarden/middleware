name: ðŸš€ Release @appwarden/middleware
on:
  push:
    branches:
      - release

# Explicitly define permissions following the principle of least privilege
permissions:
  contents: write # for semantic-release to create releases and tags
  issues: write # for semantic-release to comment on issues
  pull-requests: write # for semantic-release to comment on PRs
  id-token: write # for npm provenance

jobs:
  release:
    name: ðŸš€ Release @appwarden/middleware
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          ref: release
          fetch-depth: 0 # Needed for semantic-release to generate correct version numbers

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 10.4.1
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.APPWARDEN_MIDDLEWARE_NPM_TOKEN }}
        with:
          node-version: lts/iron
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Verify lockfile integrity
        run: |
          # Check if lockfile has been tampered with
          echo "Verifying lockfile integrity..."
          pnpm dedupe --check

      - name: Install dependencies
        run: |
          # Set safer npm config
          npm config set ignore-scripts true
          npm config set audit true

          # Install dependencies with frozen lockfile for reproducibility
          pnpm install --ignore-scripts --frozen-lockfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Disable progress bars for cleaner logs
          NPM_CONFIG_PROGRESS: "false"

      - name: Run post-install scripts
        run: |
          pnpm prepare
          pnpm build

      - name: Run security checks
        run: |
          # Audit dependencies for security vulnerabilities
          pnpm audit --audit-level high

          # Check for unpinned dependencies (using ^ or ~)
          echo "Checking for unpinned dependencies..."
          if grep -E '"[^"]+": "\^[^"]+"|"[^"]+": "~[^"]+"' package.json; then
            echo "Warning: Found unpinned dependencies in package.json. Consider pinning them for better security."
            # Not failing the build, just warning
          fi

      - name: Run code quality checks
        run: |
          pnpm check
          pnpm test

      - name: Release ðŸš€
        run: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.APPWARDEN_MIDDLEWARE_NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: "true"

      - name: Merge release -> main
        run: |
          # Use local git config instead of global
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"

          # Configure Git to use the GitHub token for authentication
          # This is needed because we set persist-credentials: false in the checkout step
          git config --local http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | base64)"

          # Verify branch integrity before merging
          echo "Verifying branch integrity..."
          git fetch origin main:main

          # Verify signatures if enabled in your repository
          if git config --get merge.verifySignatures; then
            echo "Signature verification is enabled"
          fi

          # Attempt to merge with security checks
          echo "Attempting to merge release into main..."
          git checkout main

          # Check for unexpected changes
          if git diff --name-only origin/main | grep -v "package.json\|package-lock.json\|CHANGELOG.md\|.version"; then
            echo "Warning: Unexpected files changed in main branch. Proceeding with caution."
          fi

          # Use --no-ff to ensure merge commit and clear audit trail
          git merge --no-ff release -m "chore: merge release into main [skip ci]"

          # Push the merge commit
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
